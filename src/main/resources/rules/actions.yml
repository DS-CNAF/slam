actions:


#do ponizszj niby-akcji mozna dopisywac constrainty, ktore chce sie reuzytkowac
  - !com.agreemount.slaneg.action.definition.ActionsAttributesContainer
    id: notARealAction
    constraint: #nie chcemy zeby ta nibyakcja sie wyswietlala, dlatego taki dziwny warunek
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: nieistniejacystatn
          value: nieistnajacawartosc
    constraints:
      - &pewienConstraint !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
        role: manager
#tutaj mozna dopisac kolejne wspoldzielone constrainty, po znaku myslnika jak powyzej


#funkcja do tworzenia nowego dokumentu TOMEK - ta akcja tworzy nowy dokument
  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createNewRequest #NIE ZMIENIAC - po tej zmiennej wyszukuje akcję do tworzenia requesty
    label: Stwórz wniosek SLA
    alias: newRoot #NIE ZMIENIAC - po tym aliasie dostaje sie dokumentu i ustawiam mu team uzytkownika
    basedOnDocumentStoredUnderAlias: documentDraftFromController #NIE ZMIENIAC
    redirectToThisVersion: true
    visible: false
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newRoot
        states:
          documentType: offer
          mainState: offerHidden
          OfferType: publicOffer


  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: publishOffer
    label: publish offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerHidden
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
          #tutaj dodać warunek HasAnyOfMetrics
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: offer
          mainState: offerPublished

  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editOffer
    label: Edit offer
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE

          #tutaj dodać warunek HasAnyOfMetrics
    secondStepActions:
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: save
      label: Save as published
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      setTeamFromAlias: BASE
      redirectToThisVersion: true
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            mainState: offerPublished
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: save
      label: Save as hidden
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      setTeamFromAlias: BASE
      redirectToThisVersion: true
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            mainState: offerHidden

#akcja zmiany oferty na prywatną

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: changeToPrivateOffer
    label: Change offer to private
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: publicOffer
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          OfferType: privateOffer
          #na razie nie usuwam relacji, jak dla mnie rpzydałoby sie je zostawić

#akcja zmiany oferty na publiczną

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: changeToPublicOffer
    label: Change offer to public
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          OfferType: publicOffer
          #na razie nie usuwam relacji, jak dla mnie rpzydałoby sie je zostawić

#oznaczenie oferty jako serwis1
  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: addComputingMetrics
    label: Make it a computing offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerHidden
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.HasMetricsDef
          type: ANY
          documentAlias: BASE
          negation: true
          metrics:
            - totalGuaranteedComputing
#          mustNotBeEmpty: false
    actions:
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: computingTime-totalGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: computingTime-totalLimit
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: computingTime-instanceGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: computingTime-instanceLimit
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: computingTime-userGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: computingTime-userLimit       
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: publicIP-totalGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: publicIP-totalLimit
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: publicIP-instanceGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: publicIP-instanceLimit
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: publicIP-userGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: publicIP-userLimit                                              
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          serviceType: computing
        #fajnie by było, gdyby była akcja usuwania wszystkich metryk

#oznaczenie oferty jako storage
  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: addStorageMetrics
    label: Make it a storage offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerHidden
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.HasMetricsDef
          type: ANY
          documentAlias: BASE
          negation: true
          metrics:
            - content2
#          mustNotBeEmpty: false
    actions:
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: storage-totalGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: storage-totalLimit
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: storage-instanceGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: storage-instanceLimit
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: storage-userGuaranteed
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: storage-userLimit
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          serviceType: storage
        #fajnie by było, gdyby była akcja usuwania wszystkich metryk

##oznaczenie oferty jako serwis3
#  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
#    id: addSerwis3Metrics
#    label: Make it a service3 offer
#    parentAlias: BASE
#    alias: newLeaf
#    metricSource: ALIAS
#    copyRelationsFromAlias: BASE
#    copyMetricsFromAlias: BASE
#    copyStatesFromAlias: BASE
#    setTeamFromAlias: BASE
#    redirectToThisVersion: true
#    constraint:
#      !com.agreemount.slaneg.constraint.action.definition.Operator
#        type: AND
#        children:
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
#          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: documentType
#          value: offer
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: mainState
#          value: offerHidden
#        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
#          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasMetricsDef
#          type: ANY
#          documentAlias: BASE
#          negation: true
#          metrics:
#            - content3
##          mustNotBeEmpty: false
#    actions:
#      - !com.agreemount.slaneg.action.definition.AddMetric
#        documentAlias: newLeaf
#        metricId: content3
#        #fajnie by było, gdyby była akcja usuwania wszystkich metryk

#negocjacja providera

  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editNegotiationForProvider
    label: Negotiate
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: sideState
          value: provider
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    secondStepActions:
#    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
#      id: saveForProvider
#      label: Save (and send later)
#      parentAlias: BASE
#      alias: newLeaf
#      metricSource: FORM
#      copyRelationsFromAlias: BASE
#      copyStatesFromAlias: BASE
#      setTeamFromAlias: BASE
#      redirectToThisVersion: true
#      copyRelationsFromAlias: BASE
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: sendToCustomer
      label: Send
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      redirectToThisVersion: true
      setTeamFromAlias: BASE
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            sideState: customer

#Wysyłanie do customera

#  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
#    id: sendToCustomer
#    label: Send to customer
#    parentAlias: BASE
#    alias: newLeaf
#    metricSource: ALIAS
#    copyMetricsFromAlias: BASE
#    copyRelationsFromAlias: BASE
#    copyStatesFromAlias: BASE
#    redirectToThisVersion: true
#    setTeamFromAlias: BASE
#    copyRelationsFromAlias: BASE
#    constraint:
#      !com.agreemount.slaneg.constraint.action.definition.Operator
#        type: AND
#        children:
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: documentType
#          value: request
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: OfferType
#          value: privateOffer
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: mainState
#          value: sent
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: sideState
#          value: provider
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
#          role: provider
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
#          documentAlias: BASE
#    actions:
#      - !com.agreemount.slaneg.action.definition.ChangeState
#        documentAlias: newLeaf
#        states:
#          sideState: customer

# zaakceptowanie

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: acceptRequest
    label: Accept request
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    copyRelationsFromAlias: BASE
    copyStatesFromAlias: BASE
    redirectToThisVersion: true
    setTeamFromAlias: BASE
    copyRelationsFromAlias: BASE
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: sideState
          value: provider
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: sla
          mainState: signed
          SlaActivityState: beforeStart

#odrzucenie

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: rejectRequest
    label: Reject request
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    copyRelationsFromAlias: BASE
    copyStatesFromAlias: BASE
    redirectToThisVersion: true
    setTeamFromAlias: BASE
    copyRelationsFromAlias: BASE
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: sideState
#          value: provider
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider
#        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
#          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          mainState: rejected

#-----------------------------------------------------------------------------------

#akcja edycji i zapisu/wysłania

  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editDraft
    label: Edit request
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: draft
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    secondStepActions:
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: save
      label: Save as draft
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      setTeamFromAlias: BASE
      redirectToThisVersion: true
      copyRelationsFromAlias: BASE
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: send
      label: Send Request
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      redirectToThisVersion: true
      setTeamFromAlias: BASE
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            mainState: sent
            sideState: provider

#negocjacja użytkownika
  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editNegotiation
    label: Negotiate
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: sideState
          value: customer
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    secondStepActions:
#    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
#      id: save
#      label: Save (and send later)
#      parentAlias: BASE
#      alias: newLeaf
#      metricSource: FORM
#      copyRelationsFromAlias: BASE
#      copyStatesFromAlias: BASE
#      setTeamFromAlias: BASE
#      redirectToThisVersion: true
#      copyRelationsFromAlias: BASE
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: send
      label: Send
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      redirectToThisVersion: true
      setTeamFromAlias: BASE
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            sideState: provider

##Wysyłanie do providera
#
#  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
#    id: sendToProvider
#    label: Send to provider
#    parentAlias: BASE
#    alias: newLeaf
#    metricSource: ALIAS
#    copyMetricsFromAlias: BASE
#    copyRelationsFromAlias: BASE
#    copyStatesFromAlias: BASE
#    redirectToThisVersion: true
#    setTeamFromAlias: BASE
#    copyRelationsFromAlias: BASE
#    constraint:
#      !com.agreemount.slaneg.constraint.action.definition.Operator
#        type: AND
#        children:
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: documentType
#          value: request
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: mainState
#          value: sent
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: sideState
#          value: customer
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
#          role: manager
#        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
#          documentAlias: BASE
##        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
##          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          sideState: provider

#akceptacja ropozycji providera

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: acceptProviderOffer
    label: Buy resources
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    copyRelationsFromAlias: BASE
    copyStatesFromAlias: BASE
    redirectToThisVersion: true
    setTeamFromAlias: BASE
    copyRelationsFromAlias: BASE
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: sideState
          value: customer
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: sla
          mainState: signed
          SlaActivityState: beforeStart

#odrzucenie propozycji providera

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: rejectProviderOffer
    label: Reject Provider's offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    copyRelationsFromAlias: BASE
    copyStatesFromAlias: BASE
    redirectToThisVersion: true
    setTeamFromAlias: BASE
    copyRelationsFromAlias: BASE
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: sideState
          value: customer
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          mainState: rejected







#tworzenie requestu przez użytkownika

#  - !com.agreemount.slaneg.action.definition.CreateNewRoot
#    id: createRequestFromOffer
#    label: create request from offer
#    alias: newLeaf
#    metricSource: ALIAS
#    copyMetricsFromAlias: BASE
##    copyRelationsFromAlias: BASE
#    copyStatesFromAlias: BASE
#    redirectToThisVersion: true
#    copyNameFromAlias: BASE
#    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
#    constraint:
#      !com.agreemount.slaneg.constraint.action.definition.Operator
#        type: AND
#        children:
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
#          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: documentType
#          value: offer
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: mainState
#          value: offerPublished
#        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
#          documentAlias: BASE
#    actions:
#      - !com.agreemount.slaneg.action.definition.ChangeState
#        documentAlias: newLeaf
#        states:
#          documentType: request
#          mainState: draft
##      - !pl.cyfronet.bazaar.engine.extension.action.definition.SetTestGrantName #potrzebne aby nadać jakąś nazwę requestowi
##        documentAliases: !java.util.ArrayList
##          - newLeaf
##      - !pl.cyfronet.bazaar.engine.extension.action.definition.SetLoginAsTeam #potrzebne nadawanie teamu użytkownika który klika
##        documentAlias: newLeaf

  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createRequestFromPrivateOfferComputing
    label: create request from private offer
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    redirectToThisVersion: true
    copyNameFromAlias: BASE
    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerPublished
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: serviceType
          value: computing
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: request
          mainState: draft
          OfferType: privateOffer
          serviceType: computing
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: startComp    
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: endComp
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: weightComputing
      - !com.agreemount.slaneg.action.definition.CreateRelation #relacja pomiedzy sla a rekomendacją
        leftAlias: newLeaf
        relation: is_connected_SLA_to_Offer
        rightAlias: BASE

  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createRequestFromPrivateOfferStorage
    label: create request from private offer
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    redirectToThisVersion: true
    copyNameFromAlias: BASE
    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerPublished
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: serviceType
          value: storage
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: request
          mainState: draft
          OfferType: privateOffer
          serviceType: storage
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: startStorage
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: endStorage
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: weightStorage
      - !com.agreemount.slaneg.action.definition.CreateRelation #relacja pomiedzy sla a rekomendacją
        leftAlias: newLeaf
        relation: is_connected_SLA_to_Offer
        rightAlias: BASE


  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createRequestFromPublicOfferComputing
    label: create request from public offer
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    redirectToThisVersion: true
    copyNameFromAlias: BASE
    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerPublished
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: publicOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: serviceType
          value: computing
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: request
          mainState: draft
          OfferType: publicOffer
          SlaActivityState: beforeStart
          serviceType: computing
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: startComp    
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: endComp
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: weightComputing
      - !com.agreemount.slaneg.action.definition.CreateRelation #relacja pomiedzy sla a rekomendacją
        leftAlias: newLeaf
        relation: is_connected_SLA_to_Offer
        rightAlias: BASE

  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createRequestFromPublicOfferStorage
    label: create request from public offer
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    redirectToThisVersion: true
    copyNameFromAlias: BASE
    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerPublished
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: publicOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: serviceType
          value: storage
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: request
          mainState: draft
          OfferType: publicOffer
          serviceType: storage
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: startStorage
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: endStorage
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: weightStorage
      - !com.agreemount.slaneg.action.definition.CreateRelation #relacja pomiedzy sla a rekomendacją
        leftAlias: newLeaf
        relation: is_connected_SLA_to_Offer
        rightAlias: BASE


#do tej akcji przydałoby się ograniczenie edycji do wybranych metryk
  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editPublicDraft
    label: Choose dates for SLA
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: publicOffer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: draft
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    secondStepActions:
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: buyPublic
      label: Buy resources
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      redirectToThisVersion: true
      setTeamFromAlias: BASE
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            documentType: sla
            mainState: signed
            SlaActivityState: beforeStart

#akcje cron

  - !com.agreemount.slaneg.action.definition.CronAction
    id: ActivateSlaComputing
    label: ActivateSlaAction
    constaintForSelectQuery: #wyszukujemy dokumenty, na ktorych chcemy odpalic akcje, skladnia jak w queries.yml
      !com.agreemount.slaneg.constraint.query.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: documentType
          value: sla
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: mainState
          value: signed
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: serviceType
          value: computing
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: SlaActivityState
          value: beforeStart
        - !com.agreemount.slaneg.constraint.query.definition.metric.CompareRequestedResourceDef #przykladowanie wyszukanie trwajacych granatow
          metricId: startComp
          comparison: LESSER #wartosc metryki end ma byc wieksza od aktualnej daty
          requestedValue:
            !com.agreemount.slaneg.constraint.query.definition.metric.CurrentDateValue
            sth: ok
        - !com.agreemount.slaneg.constraint.query.definition.IsLeafADef
          sth: ok
    actions: #akcja, ktora chcemy wykonac na kazdym z dokumentow, rowniez mozna dodac bardziej zaawansowny constraint, jak dla innych akcji oraz podakcje
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: BASE
        states:
          SlaActivityState: active

  - !com.agreemount.slaneg.action.definition.CronAction
    id: ActivateSlaStorage
    label: ActivateSlaAction
    constaintForSelectQuery: #wyszukujemy dokumenty, na ktorych chcemy odpalic akcje, skladnia jak w queries.yml
      !com.agreemount.slaneg.constraint.query.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: documentType
          value: sla
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: mainState
          value: signed
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: serviceType
          value: storage
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: SlaActivityState
          value: beforeStart
        - !com.agreemount.slaneg.constraint.query.definition.metric.CompareRequestedResourceDef #przykladowanie wyszukanie trwajacych granatow
          metricId: startStorage
          comparison: LESSER #wartosc metryki end ma byc wieksza od aktualnej daty
          requestedValue:
            !com.agreemount.slaneg.constraint.query.definition.metric.CurrentDateValue
            sth: ok
        - !com.agreemount.slaneg.constraint.query.definition.IsLeafADef
          sth: ok
    actions: #akcja, ktora chcemy wykonac na kazdym z dokumentow, rowniez mozna dodac bardziej zaawansowny constraint, jak dla innych akcji oraz podakcje
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: BASE
        states:
          SlaActivityState: active

  - !com.agreemount.slaneg.action.definition.CronAction
    id: deActivateSlaComputing
    label: deActivateSlaAction
    constaintForSelectQuery: #wyszukujemy dokumenty, na ktorych chcemy odpalic akcje, skladnia jak w queries.yml
      !com.agreemount.slaneg.constraint.query.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: documentType
          value: sla
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: mainState
          value: signed
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: serviceType
          value: computing
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: SlaActivityState
          value: active
        - !com.agreemount.slaneg.constraint.query.definition.metric.CompareRequestedResourceDef #przykladowanie wyszukanie trwajacych granatow
          metricId: endComp
          comparison: LESSER #wartosc metryki end ma byc wieksza od aktualnej daty
          requestedValue:
            !com.agreemount.slaneg.constraint.query.definition.metric.CurrentDateValue
            sth: ok
        - !com.agreemount.slaneg.constraint.query.definition.IsLeafADef
          sth: ok
    actions: #akcja, ktora chcemy wykonac na kazdym z dokumentow, rowniez mozna dodac bardziej zaawansowny constraint, jak dla innych akcji oraz podakcje
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: BASE
        states:
          SlaActivityState: closed

  - !com.agreemount.slaneg.action.definition.CronAction
    id: deActivateSlaStorage
    label: deActivateSlaAction
    constaintForSelectQuery: #wyszukujemy dokumenty, na ktorych chcemy odpalic akcje, skladnia jak w queries.yml
      !com.agreemount.slaneg.constraint.query.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: documentType
          value: sla
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: mainState
          value: signed
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: serviceType
          value: storage
        - !com.agreemount.slaneg.constraint.query.definition.StateEqualsDef
          state: SlaActivityState
          value: active
        - !com.agreemount.slaneg.constraint.query.definition.metric.CompareRequestedResourceDef #przykladowanie wyszukanie trwajacych granatow
          metricId: endStorage
          comparison: LESSER #wartosc metryki end ma byc wieksza od aktualnej daty
          requestedValue:
            !com.agreemount.slaneg.constraint.query.definition.metric.CurrentDateValue
            sth: ok
        - !com.agreemount.slaneg.constraint.query.definition.IsLeafADef
          sth: ok
    actions: #akcja, ktora chcemy wykonac na kazdym z dokumentow, rowniez mozna dodac bardziej zaawansowny constraint, jak dla innych akcji oraz podakcje
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: BASE
        states:
          SlaActivityState: closed





#######################################



#Potrzebne rzeczy:
#nadpisywanie teamu

#ograniczenie edycji do wybranych metryk



#na później:
#usuwanie stanów

#akcja do usuwania wszystkich metryk

#kwerenda opierająca się na relacji dokumentu (ale to już jest chyba w nowym silniku). Potrzebne do kwerendy dla providera: sla dla moiich ofert (sla są w relacji z ofertami).
# Ale to może tutaj nie zadziałać. Generalnie muszę najpierw znaleźć oferty providera (proste) a później zwiazane z nimi SLA i je wyświetlić w kwerendzie.
#Chyyba , że wystarczy nam obsługa tego w "DocumentRelationsQuery"