actions:


#do ponizszj niby-akcji mozna dopisywac constrainty, ktore chce sie reuzytkowac
  - !com.agreemount.slaneg.action.definition.ActionsAttributesContainer
    id: notARealAction
    constraint: #nie chcemy zeby ta nibyakcja sie wyswietlala, dlatego taki dziwny warunek
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: nieistniejacystatn
          value: nieistnajacawartosc
    constraints:
      - &pewienConstraint !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
        role: manager
#tutaj mozna dopisac kolejne wspoldzielone constrainty, po znaku myslnika jak powyzej


#funkcja do tworzenia nowego dokumentu TOMEK - ta akcja tworzy nowy dokument
  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createNewRequest #NIE ZMIENIAC - po tej zmiennej wyszukuje akcję do tworzenia requesty
    label: Stwórz wniosek SLA
    alias: newRoot #NIE ZMIENIAC - po tym aliasie dostaje sie dokumentu i ustawiam mu team uzytkownika
    basedOnDocumentStoredUnderAlias: documentDraftFromController #NIE ZMIENIAC
    redirectToThisVersion: true
    visible: false
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newRoot
        states:
          documentType: offer
          mainState: offerHidden
          OfferType: publicOffer

#akcja zmiany oferty na prywatną

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: changeToPrivateOffer
    label: Change offer to private
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: publicOffer
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          OfferType: privateOffer
          #na razie nie usuwam relacji, jak dla mnie rpzydałoby sie je zostawić

#akcja zmiany oferty na publiczną

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: changeToPublicOffer
    label: Change offer to public
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          OfferType: publicOffer
          #na razie nie usuwam relacji, jak dla mnie rpzydałoby sie je zostawić

#oznaczenie oferty jako serwis1
  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: addSerwis1Metrics
    label: Make it a service1 offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerHidden
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.HasMetricsDef
          type: ANY
          documentAlias: BASE
          negation: true
          metrics:
            - content
#          mustNotBeEmpty: false

          #hasAnyOfMetric
    actions:
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: content
        #fajnie by było, gdyby była akcja usuwania wszystkich metryk

#oznaczenie oferty jako serwis2
  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: addSerwis2Metrics
    label: Make it a service2 offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerHidden
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.HasMetricsDef
          type: ANY
          documentAlias: BASE
          negation: true
          metrics:
            - content2
#          mustNotBeEmpty: false
          #hasAnyOfMetric
    actions:
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: content2
        #fajnie by było, gdyby była akcja usuwania wszystkich metryk

#oznaczenie oferty jako serwis3
  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: addSerwis3Metrics
    label: Make it a service3 offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerHidden
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.HasMetricsDef
          type: ANY
          documentAlias: BASE
          negation: true
          metrics:
            - content3
#          mustNotBeEmpty: false
          #hasAnyOfMetric
    actions:
      - !com.agreemount.slaneg.action.definition.AddMetric
        documentAlias: newLeaf
        metricId: content3
        #fajnie by było, gdyby była akcja usuwania wszystkich metryk


#eakcja edycji i zapisu/wysłania

  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editDraft
    label: Edit request
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: draft
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    secondStepActions:
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: save
      label: Save as draft
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      setTeamFromAlias: BASE
      redirectToThisVersion: true
      copyRelationsFromAlias: BASE
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: send
      label: Send Request
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      redirectToThisVersion: true
      setTeamFromAlias: BASE
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            mainState: sent
            sideState: provider

#negocjacja użytkownika
  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editNegotiation
    label: Negotiate
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: sideState
          value: customer
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    secondStepActions:
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: save
      label: Save (and send later)
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      setTeamFromAlias: BASE
      redirectToThisVersion: true
      copyRelationsFromAlias: BASE
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: send
      label: Send
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      redirectToThisVersion: true
      setTeamFromAlias: BASE
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            sideState: provider

#Wysyłanie do providera

  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: sendToProvider
    label: Send to provider
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    copyRelationsFromAlias: BASE
    copyStatesFromAlias: BASE
    redirectToThisVersion: true
    setTeamFromAlias: BASE
    copyRelationsFromAlias: BASE
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: request
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: sent
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: sideState
          value: customer
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleInRelatedBusinessEntityDef
#          role: rola #do poprawy i odkomentowania jak będzie nadpisywanie teamu
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          sideState: provider






  - !com.agreemount.slaneg.action.definition.CreateNewLeaf
    id: publishOffer
    label: publish offer
    parentAlias: BASE
    alias: newLeaf
    metricSource: ALIAS
    copyRelationsFromAlias: BASE
    copyMetricsFromAlias: BASE
    copyStatesFromAlias: BASE
    setTeamFromAlias: BASE
    redirectToThisVersion: true
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerHidden
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
          documentAlias: BASE
          #tutaj dodać warunek HasAnyOfMetrics
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: offer
          mainState: offerPublished

  - !com.agreemount.slaneg.action.definition.MoveOn
    id: editOffer
    label: Edit offer
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: provider #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.HasAnyRoleInRelatedBusinessEntityDef
          documentAlias: BASE

          #tutaj dodać warunek HasAnyOfMetrics
    secondStepActions:
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: save
      label: Save as published
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      setTeamFromAlias: BASE
      redirectToThisVersion: true
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            mainState: offerPublished
    - !com.agreemount.slaneg.action.definition.CreateNewLeaf
      id: save
      label: Save as hidden
      parentAlias: BASE
      alias: newLeaf
      metricSource: FORM
      copyRelationsFromAlias: BASE
      copyStatesFromAlias: BASE
      setTeamFromAlias: BASE
      redirectToThisVersion: true
      copyRelationsFromAlias: BASE
      actions:
        - !com.agreemount.slaneg.action.definition.ChangeState
          documentAlias: newLeaf
          states:
            mainState: offerHidden

#tworzenie requestu przez użytkownika

#  - !com.agreemount.slaneg.action.definition.CreateNewRoot
#    id: createRequestFromOffer
#    label: create request from offer
#    alias: newLeaf
#    metricSource: ALIAS
#    copyMetricsFromAlias: BASE
##    copyRelationsFromAlias: BASE
#    copyStatesFromAlias: BASE
#    redirectToThisVersion: true
#    copyNameFromAlias: BASE
#    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
#    constraint:
#      !com.agreemount.slaneg.constraint.action.definition.Operator
#        type: AND
#        children:
#        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
#          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: documentType
#          value: offer
#        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
#          state: mainState
#          value: offerPublished
#        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
#          documentAlias: BASE
#    actions:
#      - !com.agreemount.slaneg.action.definition.ChangeState
#        documentAlias: newLeaf
#        states:
#          documentType: request
#          mainState: draft
##      - !pl.cyfronet.bazaar.engine.extension.action.definition.SetTestGrantName #potrzebne aby nadać jakąś nazwę requestowi
##        documentAliases: !java.util.ArrayList
##          - newLeaf
##      - !pl.cyfronet.bazaar.engine.extension.action.definition.SetLoginAsTeam #potrzebne nadawanie teamu użytkownika który klika
##        documentAlias: newLeaf

  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createRequestFromPrivateOffer
    label: create request from private offer
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    redirectToThisVersion: true
    copyNameFromAlias: BASE
    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerPublished
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: privateOffer
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: request
          mainState: draft
          OfferType: privateOffer
      - !com.agreemount.slaneg.action.definition.CreateRelation #relacja pomiedzy sla a rekomendacją
        leftAlias: newLeaf
        relation: is_connected_SLA_to_Offer
        rightAlias: BASE


  - !com.agreemount.slaneg.action.definition.CreateNewRoot
    id: createRequestFromPublicOffer
    label: create request from public offer
    alias: newLeaf
    metricSource: ALIAS
    copyMetricsFromAlias: BASE
    redirectToThisVersion: true
    copyNameFromAlias: BASE
    setTeamFromAlias: BASE #do zastapienia przez nadawanie teamu użytkownika, który klika
    constraint:
      !com.agreemount.slaneg.constraint.action.definition.Operator
        type: AND
        children:
        - !com.agreemount.slaneg.constraint.action.definition.HasRoleDef
          role: manager #definicja musi miec jakis argument, bo yaml sie wyklada
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: documentType
          value: offer
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: mainState
          value: offerPublished
        - !com.agreemount.slaneg.constraint.action.definition.StateEqualsDef
          state: OfferType
          value: publicOffer
        - !com.agreemount.slaneg.constraint.action.definition.IsLeafDef
          documentAlias: BASE
    actions:
      - !com.agreemount.slaneg.action.definition.ChangeState
        documentAlias: newLeaf
        states:
          documentType: sla
          mainState: signed
          OfferType: publicOffer
      - !com.agreemount.slaneg.action.definition.CreateRelation #relacja pomiedzy sla a rekomendacją
        leftAlias: newLeaf
        relation: is_connected_SLA_to_Offer
        rightAlias: BASE


#######################################


#qkcje providera (prywatnego) - zatweirdzenie/odrzucenie i negocjacji (prosta) - TODO
#dopisać tworzenie relacji z ofertą przy tworzeniu requestu - zrobione
#jedyne role to customer i provider - zrobione
#podział na publiczne i prywatne oferty (provider może miec i takie i takie) - akcja oznacz jako publiczną/prywatną - zrobione
#oferta per typ serwisu i tak samo załatwiamy to akcjami - zzrobione

#Potrzebne rzeczy:
#nadpisywanie teamu
#HasAnyOfMetrics
#akcja do usuwania wszystkich metryk
#usuwanie stanów
#kwerenda opierająca się na relacji dokumentu (ale to już jest chyba w nowym silniku). Potrzebne do kwerendy dla providera: sla dla moiich ofert (sla są w relacji z ofertami).
# Ale to może tutaj nie zadziałać. Generalnie muszę najpierw znaleźć oferty providera (proste) a później zwiazane z nimi SLA i je wyświetlić w kwerendzie.
#Chyyba , że wystarczy nam obsługa tego w "DocumentRelationsQuery"